/******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId]) {
/******/ 			return installedModules[moduleId].exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			i: moduleId,
/******/ 			l: false,
/******/ 			exports: {}
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.l = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// define getter function for harmony exports
/******/ 	__webpack_require__.d = function(exports, name, getter) {
/******/ 		if(!__webpack_require__.o(exports, name)) {
/******/ 			Object.defineProperty(exports, name, {
/******/ 				configurable: false,
/******/ 				enumerable: true,
/******/ 				get: getter
/******/ 			});
/******/ 		}
/******/ 	};
/******/
/******/ 	// getDefaultExport function for compatibility with non-harmony modules
/******/ 	__webpack_require__.n = function(module) {
/******/ 		var getter = module && module.__esModule ?
/******/ 			function getDefault() { return module['default']; } :
/******/ 			function getModuleExports() { return module; };
/******/ 		__webpack_require__.d(getter, 'a', getter);
/******/ 		return getter;
/******/ 	};
/******/
/******/ 	// Object.prototype.hasOwnProperty.call
/******/ 	__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "/";
/******/
/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(__webpack_require__.s = 2);
/******/ })
/************************************************************************/
/******/ ({

/***/ "./resources/js/prediction.js":
/***/ (function(module, exports) {

eval("(function () {\n    function scrollToComment() {\n        var myHash = location.hash;\n\n        if (myHash[1] !== undefined) {\n            $target = $(myHash);\n            parentID = $target.attr('parent-id');\n            if (parentID !== undefined) {\n                var $repliesLink = $target.closest('.js-replies-wrapper').siblings('.js-replies-link'),\n                    $repliesLinkTitle = $repliesLink.find('.js-reply-link-text');\n\n                $repliesLink.addClass('is-open');\n                $repliesLinkTitle.text($repliesLinkTitle.attr('data-text-hide'));\n            }\n            $('html, body').animate({ scrollTop: $target.offset().top }, 700);\n        }\n\n        setTimeout(function () {\n            $('.prediction').scrollTop(0);\n        }, 500);\n    }\n\n    scrollToComment();\n\n    var $element = $('.prediction');\n\n    $element.find(\".js-agree\").on(\"click\", function () {\n        vote('agree');\n    });\n\n    $element.find(\".js-disagree\").on(\"click\", function () {\n        vote('disagree');\n    });\n\n    $element.find(\".js-comment-add\").on(\"submit\", addComment);\n\n    $element.find(\".js-comment-add textarea\").on(\"keyup\", function (e) {\n        if (e.keyCode === 13) {\n            addComment(e);\n        }\n    });\n\n    function vote(voteType) {\n        if (!kaspersky.isAuthorized) {\n            window.location = kaspersky.loginUrl + '?next=' + location.pathname;\n            return;\n        }\n\n        if (kaspersky.voted) {\n            return;\n        }\n\n        kaspersky.voted = true;\n\n        var val = $('#vote_' + voteType + '_count');\n        val.text(parseInt(val.text()) + 1);\n\n        if (voteType === 'agree') {\n            $('.js-agree').addClass('active');\n            $('.js-disagree').addClass('disable');\n        } else {\n            $('.js-disagree').addClass('active');\n            $('.js-agree').addClass('disable');\n        }\n\n        kaspersky.voteApi({\n            brief_id: kaspersky.briefId,\n            agree: voteType\n        }).fail(function (msg) {\n            alert(msg.statusText);\n        });\n    }\n\n    function addComment(e) {\n        e.preventDefault();\n\n        if (!kaspersky.isAuthorized) {\n            window.location = kaspersky.loginUrl + '?next=' + location.pathname;\n            return;\n        }\n\n        var $textArea = $('.js-comment-add textarea');\n        var text = $textArea.val();\n\n        if (text.trim() === '') {\n            return;\n        }\n\n        $textArea.val('').blur();\n        checkCommentsOwner();\n\n        $.post(langUrl + 'api/predictions/' + kaspersky.briefId + '/comment', {\n            text: text\n        }).done(function (result) {\n            if (result.status === 'ok') {\n                var commentTemplate = '<div class=\"comment__wrap js-comments-item comment-owner\" id=\"' + result.id + '\"> <div class=\"comment__author\" style=\"background-image: url(/' + kaspersky.userAvatar + ')\"></div><div class=\"comment__wrapper js-comment-root\"> <span class=\"comment__name js-comment-name\">' + kaspersky.userName + '</span> <span class=\"comment__text js-comment-text\">' + result.text + '</span> <div class=\"comment__tools\"> <span class=\"comment__date\">' + moment().format(\"DD MMM YYYY\") + '</span> <span class=\"comment__like js-like-btn\"> <span class=\"comment__like-icon js-like-icon\"> <svg width=\"14px\" height=\"13px\" viewBox=\"0 0 14 13\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\"><g id=\"Desktop\" stroke=\"none\" stroke-width=\"1\" fill-rule=\"evenodd\"> <g id=\"Replies-v.1.2\" transform=\"translate(-210.000000, -1781.000000)\" stroke=\"#00FFA7\"> <g id=\"Group-8\" transform=\"translate(68.000000, 1725.000000)\"> <g id=\"Group-5\" transform=\"translate(142.000000, 55.000000)\"> <g id=\"heart\" transform=\"translate(0.000000, 2.000000)\"> <path d=\"M10.035,0 C11.118,0 11.967,0.296 12.58,0.889 C13.193,1.482 13.5,2.299 13.5,3.343 C13.5,4.053 13.245,4.781 12.735,5.523 C12.48,5.903 12.185,6.251 11.851,6.567 L7.382,10.857 C7.27646826,10.9498269 7.14054635,11.0007086 7,11.0000141 C6.85958415,11.0009849 6.72367798,10.9504648 6.618,10.858 L2.148,6.567 C1.83166904,6.27740031 1.55101903,5.95109431 1.312,5.595 C0.772,4.82 0.5,4.07 0.5,3.343 C0.5,2.3 0.807,1.482 1.42,0.889 C2.033,0.296 2.882,0 3.965,0 C4.523,0 5.112,0.19 5.733,0.569 C6.163,0.822 6.586,1.146 7,1.541 C7.414,1.146 7.836,0.821 8.267,0.569 C8.887,0.189 9.477,0 10.035,0 Z\" id=\"Path\"></path> </g> </g> </g> </g> </g> </svg> </span> <span class=\"comment__like-qty js-like-counter\">0</span> </span> <span class=\"comment__reply js-comment-reply\">reply</span> </div><span class=\"comment__reply-link js-replies-link\"> <span> <span class=\"comment__reply-link-text js-reply-link-text\" data-text-show=\"Show replies\" data-text-hide=\"Hide replies\">Show replies</span> <span class=\"js-replies-count comment__replies-count is-zero\">(<span class=\"comment__replies-counter js-replies-counter\">4</span>)</span> </span> <span class=\"comment__reply-link-arrow js-reply-arrow\"> <svg xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" width=\"15\" height=\"15\" viewBox=\"0 0 15 15\"> <defs> <path id=\"a\" d=\"M8.415 11.485L4.314 7.387c-.172-.18-.232-.253-.232-.376-.001-.123.06-.19.235-.376L8.48 2.48c.564-.559 1.391.268.832.831l-3.714 3.7 3.648 3.642a.59.59 0 0 1-.83.832z\"/> </defs> <g fill=\"none\" fill-rule=\"evenodd\" transform=\"matrix(0 1 1 0 1 1)\"> <rect width=\"14\" height=\"14\" fill=\"#030303\" fill-opacity=\".01\" stroke=\"#50E3C2\" stroke-width=\".01\" opacity=\".01\" rx=\"3\"/> <use fill=\"#00FFA7\" xlink:href=\"#a\"/> </g> </svg> </span> </span> <div class=\"comment__replies js-replies-wrapper\"> <div class=\"comment__replies-container js-replies-container\"> </div><div class=\"comment__replies-form \"> <div class=\"prediction__comment comment js-reply-form-container\"> </div></div></div><div class=\"comment__delete js-popup-comment\"> <svg width=\"14px\" height=\"14px\" viewBox=\"0 0 14 14\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\"> <g id=\"Desktop\" stroke=\"none\" stroke-width=\"1\" fill-rule=\"evenodd\"> <g id=\"Replies-v.1.2\" transform=\"translate(-924.000000, -1657.000000)\" fill-rule=\"nonzero\"> <g id=\"cross\" transform=\"translate(924.000000, 1657.000000)\"> <polygon id=\"Path\" points=\"8.88066667 6.90106667 13.8021333 11.8225333 11.8225333 13.8021333 6.90106667 8.88066667 1.9796 13.8021333 0 11.8225333 4.92146667 6.90106667 0 1.9796 1.9796 0 6.90106667 4.92146667 11.8225333 0 13.8021333 1.9796\"></polygon> </g> </g> </g> </svg> </div></div></div>';\n                var $comment = $(commentTemplate).clone();\n\n                $('.js-comment-list').prepend($comment);\n            }\n        }).fail(function (msg) {\n            alert(msg.statusText);\n        });\n    }\n\n    checkCommentsOwner();\n    checkRepliesNumber();\n\n    /* Open/hide replies */\n\n    $(document).on('click', '.js-replies-link', function () {\n        var $repliesLinkTitle = $(this).find('.js-reply-link-text');\n        var repliesLinkTitle;\n\n        if ($(this).hasClass('is-open')) {\n            repliesLinkTitle = $repliesLinkTitle.attr('data-text-show');\n            $(this).removeClass('is-open');\n        } else {\n            repliesLinkTitle = $repliesLinkTitle.attr('data-text-hide');\n            $(this).addClass('is-open');\n        }\n\n        $repliesLinkTitle.text(repliesLinkTitle);\n    });\n\n    /* Add reply */\n\n    // Append reply form\n\n    $(document).on('click', '.js-comment-reply', function () {\n        var $repliesLinkTitle = $(this).parent().siblings('.js-replies-link').find('.js-reply-link-text');\n        var repliesLinkTitle = $repliesLinkTitle.attr('data-text-hide');\n        $repliesLinkTitle.text(repliesLinkTitle);\n        var commentAuthorName = $(this).parent().siblings('.js-comment-name').text();\n        var $replyForm = $('.js-reply-form-template').clone().removeClass('js-reply-form-template');\n        var replyId = $(this).closest('.js-comments-item').attr('id');\n        $replyForm.find('.js-reply-add').attr('data-reply-id', replyId);\n        var $container = $(this).closest('.js-comment-root').find('.js-reply-form-container');\n        if (!$container.children().length) $container.append($replyForm);\n\n        $(this).parent().siblings('.js-replies-link').addClass('is-open');\n        var $replyInputField = $($container).find('textarea');\n        $replyInputField.val(commentAuthorName + ', ').focus();\n    });\n\n    // Submit reply\n\n    $(document).on('submit', '.js-reply-add', function (e) {\n        e.preventDefault();\n        $(this).find('.comment__send').attr('disabled', true);\n        var self = this;\n        var text = $(this).children('textarea').val();\n        var parentID = $(this).closest('.js-comments-item').attr('id');\n        var replyID = $(this).attr('data-reply-id');\n        var data = {\n            text: text,\n            parentID: parentID,\n            replyID: replyID\n        };\n        $.ajax({\n            url: langUrl + 'api/predictions/' + kaspersky.briefId + '/comment',\n            method: 'POST',\n            data: data,\n            type: 'json',\n            success: function success(response) {\n                var replyTemplate = '<div class=\"comment__wrap js-comments-item\" parent-id=\"' + parentID + '\" id=\"' + response.id + '\"> <div class=\"comment__author\" style=\"background-image: url(/' + kaspersky.userAvatar + ')\"></div><div class=\"comment__wrapper\"> <span class=\"comment__name js-comment-name\">' + kaspersky.userName + '</span> <span class=\"comment__text js-comment-text\">' + response.text + '</span> <div class=\"comment__tools\"> <span class=\"comment__date\">' + moment().format(\"DD MMM YYYY\") + '</span> <span class=\"comment__like js-like-btn\"> <span class=\"comment__like-icon js-like-icon\"> <svg width=\"14px\" height=\"13px\" viewBox=\"0 0 14 13\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\"><g id=\"Desktop\" stroke=\"none\" stroke-width=\"1\" fill-rule=\"evenodd\"> <g id=\"Replies-v.1.2\" transform=\"translate(-210.000000, -1781.000000)\" stroke=\"#00FFA7\"> <g id=\"Group-8\" transform=\"translate(68.000000, 1725.000000)\"> <g id=\"Group-5\" transform=\"translate(142.000000, 55.000000)\"> <g id=\"heart\" transform=\"translate(0.000000, 2.000000)\"> <path d=\"M10.035,0 C11.118,0 11.967,0.296 12.58,0.889 C13.193,1.482 13.5,2.299 13.5,3.343 C13.5,4.053 13.245,4.781 12.735,5.523 C12.48,5.903 12.185,6.251 11.851,6.567 L7.382,10.857 C7.27646826,10.9498269 7.14054635,11.0007086 7,11.0000141 C6.85958415,11.0009849 6.72367798,10.9504648 6.618,10.858 L2.148,6.567 C1.83166904,6.27740031 1.55101903,5.95109431 1.312,5.595 C0.772,4.82 0.5,4.07 0.5,3.343 C0.5,2.3 0.807,1.482 1.42,0.889 C2.033,0.296 2.882,0 3.965,0 C4.523,0 5.112,0.19 5.733,0.569 C6.163,0.822 6.586,1.146 7,1.541 C7.414,1.146 7.836,0.821 8.267,0.569 C8.887,0.189 9.477,0 10.035,0 Z\" id=\"Path\"></path> </g> </g> </g> </g> </g> </svg> </span> <span class=\"comment__like-qty js-like-counter\"></span> </span> <span class=\"comment__reply js-comment-reply\">reply</span> </div><div class=\"comment__delete js-popup-comment\"> <svg width=\"14px\" height=\"14px\" viewBox=\"0 0 14 14\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\"> <g id=\"Desktop\" stroke=\"none\" stroke-width=\"1\" fill-rule=\"evenodd\"> <g id=\"Replies-v.1.2\" transform=\"translate(-924.000000, -1657.000000)\" fill-rule=\"nonzero\"> <g id=\"cross\" transform=\"translate(924.000000, 1657.000000)\"> <polygon id=\"Path\" points=\"8.88066667 6.90106667 13.8021333 11.8225333 11.8225333 13.8021333 6.90106667 8.88066667 1.9796 13.8021333 0 11.8225333 4.92146667 6.90106667 0 1.9796 1.9796 0 6.90106667 4.92146667 11.8225333 0 13.8021333 1.9796\"></polygon> </g> </g> </g> </svg> </div></div></div>';\n                var $reply = $(replyTemplate).clone();\n                var $container = $(self).closest('.js-comment-root').find('.js-replies-container');\n                $container.append($reply);\n                $(self).closest('.comment__wrap').remove();\n                checkCommentsOwner();\n                checkRepliesNumber();\n            },\n            error: function error() {\n                console.log('Ajax failed');\n            }\n\n        });\n    });\n\n    $(document).on('click', '.js-reply-close', function (e) {\n        e.preventDefault();\n        $(this).closest('.comment__wrap').remove();\n    });\n\n    // popup\n\n    function showPopup() {\n        $('.popup').addClass('is-visible');\n    }\n\n    function closePopup() {\n        $('.popup').removeClass('is-visible');\n    }\n\n    $(document).on('click', '.js-popup', function () {\n        var popup = $('.popup');\n\n        popup.addClass('is-visible');\n        $(popup).on('click', '[data-popup-close]', closePopup);\n    });\n\n    // delete comment\n\n    function removeComment(currentItem) {\n        var id = $(currentItem).attr('id');\n\n        $.ajax({\n            url: langUrl + 'api/predictions/comment/' + id,\n            method: 'DELETE',\n            success: function success(response) {\n                if (response.status == \"ok\") {\n                    $(currentItem).find('.js-comment-text:first').text(response.text);\n                    $(currentItem).find('.comment__delete:last').css('display', 'none');\n                } else if (response.status == \"remove\") {\n                    if (currentItem.hasClass(\"comment-owner\") && currentItem.siblings(\".js-comments-item\").length == 0) {\n                        currentItem.parents(\".js-replies-wrapper\").siblings(\".js-replies-link\").remove();\n                    } else {\n                        currentItem.remove();\n                    }\n                }\n\n                closePopup();\n            }\n        });\n    }\n\n    $(document).on('click', '.js-popup-comment', function () {\n        showPopup();\n\n        var currentItem = $(this).closest('.js-comments-item');\n\n        $(document).on('click', '.js-delete-comment', function () {\n            removeComment(currentItem);\n        });\n        $(document).on('click', '[data-popup-close]', closePopup);\n    });\n\n    // Add like\n\n    $(document).on('click', '.js-like-btn', function () {\n        if (!kaspersky.isAuthorized) {\n            window.location = kaspersky.loginUrl + '?next=' + location.pathname;\n            return;\n        }\n\n        var likeCount = $(this).children('.js-like-counter').text();\n        likeCount = - -likeCount;\n        var action = '';\n\n        if (!$(this).hasClass('is-active')) {\n            $(this).addClass('is-active');\n            likeCount += 1;\n            action = \"add\";\n        } else {\n            $(this).removeClass('is-active');\n            likeCount -= 1;\n            if (likeCount <= 0) likeCount = '';\n            action = \"remove\";\n        }\n\n        $(this).children('.js-like-counter').text(likeCount);\n        var id = $(this).closest('.js-comments-item').attr('id');\n\n        $.ajax({\n            url: langUrl + 'api/predictions/comment/' + id + '/like/' + action,\n            method: 'POST',\n            success: function success(response) {}\n        });\n    });\n\n    /* Functions */\n\n    // Check comment owner in order to make available delete button\n\n    function checkCommentsOwner() {\n        var $comment = $element.find('.js-comments-item');\n\n        $comment.each(function () {\n            $(this).find('.js-comment-name').text() === kaspersky.userName ? $(this).addClass('comment-owner') : false;\n        });\n    }\n\n    // Check replies number\n\n    function checkRepliesNumber() {\n        var $openReplies = $element.find('.js-replies-link');\n\n        $openReplies.each(function () {\n            $(this).find('.js-reply-link-text');\n            var repliesCount = $(this).siblings('.js-replies-wrapper').children('.js-replies-container').children('.js-comments-item').length;\n\n            repliesCount > 0 ? $(this).addClass('is-active') : $(this).removeClass('is-active');\n            $(this).find('.js-replies-counter').text(repliesCount);\n        });\n    }\n\n    $(document).on('keydown', 'textarea', function (e) {\n        if (e.keyCode === 13) {\n            e.preventDefault();\n        }\n    });\n\n    $(document).on('keydown', '.js-reply-add textarea', function (e) {\n        if (e.keyCode === 13) {\n            $(this).parent().trigger('submit');\n        }\n    });\n})();//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9yZXNvdXJjZXMvanMvcHJlZGljdGlvbi5qcz9hOWUxIl0sIm5hbWVzIjpbIm15SGFzaCIsImxvY2F0aW9uIiwiJHRhcmdldCIsIiQiLCJwYXJlbnRJRCIsIiRyZXBsaWVzTGluayIsIiRyZXBsaWVzTGlua1RpdGxlIiwic2Nyb2xsVG9wIiwic2V0VGltZW91dCIsInNjcm9sbFRvQ29tbWVudCIsIiRlbGVtZW50Iiwidm90ZSIsImUiLCJhZGRDb21tZW50Iiwia2FzcGVyc2t5Iiwid2luZG93IiwidmFsIiwicGFyc2VJbnQiLCJ2b3RlVHlwZSIsImJyaWVmX2lkIiwiYWdyZWUiLCJhbGVydCIsIm1zZyIsIiR0ZXh0QXJlYSIsInRleHQiLCJjaGVja0NvbW1lbnRzT3duZXIiLCJsYW5nVXJsIiwicmVzdWx0IiwiY29tbWVudFRlbXBsYXRlIiwibW9tZW50IiwiJGNvbW1lbnQiLCJjaGVja1JlcGxpZXNOdW1iZXIiLCJyZXBsaWVzTGlua1RpdGxlIiwiY29tbWVudEF1dGhvck5hbWUiLCIkcmVwbHlGb3JtIiwicmVwbHlJZCIsIiRjb250YWluZXIiLCIkcmVwbHlJbnB1dEZpZWxkIiwic2VsZiIsInJlcGx5SUQiLCJkYXRhIiwidXJsIiwibWV0aG9kIiwidHlwZSIsInN1Y2Nlc3MiLCJyZXBseVRlbXBsYXRlIiwicmVzcG9uc2UiLCIkcmVwbHkiLCJlcnJvciIsImNvbnNvbGUiLCJwb3B1cCIsImlkIiwiY3VycmVudEl0ZW0iLCJjbG9zZVBvcHVwIiwic2hvd1BvcHVwIiwicmVtb3ZlQ29tbWVudCIsImxpa2VDb3VudCIsImFjdGlvbiIsIiRvcGVuUmVwbGllcyIsInJlcGxpZXNDb3VudCJdLCJtYXBwaW5ncyI6IkFBQUEsQ0FBQyxZQUFZO0FBQ1QsK0JBQTJCO0FBQ3ZCLFlBQUlBLFNBQVNDLFNBQWI7O0FBRUEsWUFBSUQsY0FBSixXQUE2QjtBQUN6QkUsc0JBQVVDLEVBQVZELE1BQVVDLENBQVZEO0FBQ0FFLHVCQUFXRixhQUFYRSxX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QixZQUFJMkIsV0FBV3BCLGNBQWYsbUJBQWVBLENBQWY7O0FBRUFvQixzQkFBYyxZQUFZO0FBQ3RCM0Isd0RBQTRDVyxVQUE1Q1gsV0FBaUVBLGlCQUFqRUEsZUFBaUVBLENBQWpFQTtBQURKMkI7QUFHSDs7QUFFRDs7QUFFQSxrQ0FBOEI7QUFDMUIsWUFBSTRCLGVBQWVoRCxjQUFuQixrQkFBbUJBLENBQW5COztBQUVBZ0QsMEJBQWtCLFlBQVk7QUFDMUJ2RDtBQUNBLGdCQUFJd0QsZUFBZXhELHdHQUFuQjs7QUFNQXdELCtCQUFtQnhELGlCQUFuQndELFdBQW1CeEQsQ0FBbkJ3RCxHQUFtRHhELG9CQUFuRHdELFdBQW1EeEQsQ0FBbkR3RDtBQUNBeEQ7QUFUSnVEO0FBV0g7O0FBRUR2RCwwQ0FBc0MsYUFBWTtBQUNoRCxZQUFJUyxjQUFKLElBQXNCO0FBQ3BCQTtBQUNEO0FBSEhUOztBQU1BQSx3REFBb0QsYUFBWTtBQUM5RCxZQUFJUyxjQUFKLElBQXNCO0FBQ3BCVDtBQUNEO0FBSEhBO0FBL1RKIiwiZmlsZSI6Ii4vcmVzb3VyY2VzL2pzL3ByZWRpY3Rpb24uanMuanMiLCJzb3VyY2VzQ29udGVudCI6WyIoZnVuY3Rpb24gKCkge1xuICAgIGZ1bmN0aW9uIHNjcm9sbFRvQ29tbWVudCgpIHtcbiAgICAgICAgdmFyIG15SGFzaCA9IGxvY2F0aW9uLmhhc2g7XG5cbiAgICAgICAgaWYgKG15SGFzaFsxXSAhPT0gdW5kZWZpbmVkKSB7XG4gICAgICAgICAgICAkdGFyZ2V0ID0gJChteUhhc2gpO1xuICAgICAgICAgICAgcGFyZW50SUQgPSAkdGFyZ2V0LmF0dHIoJ3BhcmVudC1pZCcpO1xuICAgICAgICAgICAgaWYgKHBhcmVudElEICE9PSB1bmRlZmluZWQpIHtcbiAgICAgICAgICAgICAgICB2YXIgJHJlcGxpZXNMaW5rID0gJHRhcmdldC5jbG9zZXN0KCcuanMtcmVwbGllcy13cmFwcGVyJykuc2libGluZ3MoJy5qcy1yZXBsaWVzLWxpbmsnKSxcbiAgICAgICAgICAgICAgICAgICAgJHJlcGxpZXNMaW5rVGl0bGUgPSAkcmVwbGllc0xpbmsuZmluZCgnLmpzLXJlcGx5LWxpbmstdGV4dCcpO1xuXG4gICAgICAgICAgICAgICAgJHJlcGxpZXNMaW5rLmFkZENsYXNzKCdpcy1vcGVuJyk7XG4gICAgICAgICAgICAgICAgJHJlcGxpZXNMaW5rVGl0bGUudGV4dCgoJHJlcGxpZXNMaW5rVGl0bGUuYXR0cignZGF0YS10ZXh0LWhpZGUnKSkpO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgJCgnaHRtbCwgYm9keScpLmFuaW1hdGUoXG4gICAgICAgICAgICAgIHsgc2Nyb2xsVG9wOiAkdGFyZ2V0Lm9mZnNldCgpLnRvcCB9XG4gICAgICAgICAgICAgICwgNzAwKTtcblxuICAgICAgICB9XG5cbiAgICAgICAgc2V0VGltZW91dChmdW5jdGlvbigpIHtcbiAgICAgICAgICAkKCcucHJlZGljdGlvbicpLnNjcm9sbFRvcCgwKVxuICAgICAgICB9LCA1MDApXG5cbiAgICB9XG5cbiAgICBzY3JvbGxUb0NvbW1lbnQoKTtcblxuXG4gICAgdmFyICRlbGVtZW50ID0gJCgnLnByZWRpY3Rpb24nKTtcblxuICAgICRlbGVtZW50LmZpbmQoXCIuanMtYWdyZWVcIikub24oXCJjbGlja1wiLCBmdW5jdGlvbiAoKSB7XG4gICAgICAgIHZvdGUoJ2FncmVlJyk7XG4gICAgfSk7XG5cbiAgICAkZWxlbWVudC5maW5kKFwiLmpzLWRpc2FncmVlXCIpLm9uKFwiY2xpY2tcIiwgZnVuY3Rpb24gKCkge1xuICAgICAgICB2b3RlKCdkaXNhZ3JlZScpO1xuICAgIH0pO1xuXG4gICAgJGVsZW1lbnQuZmluZChcIi5qcy1jb21tZW50LWFkZFwiKS5vbihcInN1Ym1pdFwiLCBhZGRDb21tZW50KTtcblxuICAgICRlbGVtZW50LmZpbmQoXCIuanMtY29tbWVudC1hZGQgdGV4dGFyZWFcIikub24oXCJrZXl1cFwiLCBmdW5jdGlvbiAoZSkge1xuICAgICAgICBpZiAoZS5rZXlDb2RlID09PSAxMykge1xuICAgICAgICAgICAgYWRkQ29tbWVudChlKTtcbiAgICAgICAgfVxuICAgIH0pO1xuXG4gICAgZnVuY3Rpb24gdm90ZSh2b3RlVHlwZSkge1xuICAgICAgICBpZiAoIWthc3BlcnNreS5pc0F1dGhvcml6ZWQpIHtcbiAgICAgICAgICAgIHdpbmRvdy5sb2NhdGlvbiA9IGthc3BlcnNreS5sb2dpblVybCArICc/bmV4dD0nICsgbG9jYXRpb24ucGF0aG5hbWU7XG4gICAgICAgICAgICByZXR1cm47XG4gICAgICAgIH1cblxuICAgICAgICBpZiAoa2FzcGVyc2t5LnZvdGVkKSB7XG4gICAgICAgICAgICByZXR1cm47XG4gICAgICAgIH1cblxuICAgICAgICBrYXNwZXJza3kudm90ZWQgPSB0cnVlO1xuXG4gICAgICAgIHZhciB2YWwgPSAkKCcjdm90ZV8nICsgdm90ZVR5cGUgKyAnX2NvdW50Jyk7XG4gICAgICAgIHZhbC50ZXh0KHBhcnNlSW50KHZhbC50ZXh0KCkpICsgMSk7XG5cbiAgICAgICAgaWYgKHZvdGVUeXBlID09PSAnYWdyZWUnKSB7XG4gICAgICAgICAgICAkKCcuanMtYWdyZWUnKS5hZGRDbGFzcygnYWN0aXZlJyk7XG4gICAgICAgICAgICAkKCcuanMtZGlzYWdyZWUnKS5hZGRDbGFzcygnZGlzYWJsZScpO1xuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgJCgnLmpzLWRpc2FncmVlJykuYWRkQ2xhc3MoJ2FjdGl2ZScpO1xuICAgICAgICAgICAgJCgnLmpzLWFncmVlJykuYWRkQ2xhc3MoJ2Rpc2FibGUnKTtcbiAgICAgICAgfVxuXG4gICAgICAgIGthc3BlcnNreS52b3RlQXBpKHtcbiAgICAgICAgICAgICAgICBicmllZl9pZDoga2FzcGVyc2t5LmJyaWVmSWQsXG4gICAgICAgICAgICAgICAgYWdyZWU6IHZvdGVUeXBlXG4gICAgICAgICAgICB9KVxuICAgICAgICAgICAgLmZhaWwoZnVuY3Rpb24gKG1zZykge1xuICAgICAgICAgICAgICAgIGFsZXJ0KG1zZy5zdGF0dXNUZXh0KTtcbiAgICAgICAgICAgIH0pO1xuICAgIH1cblxuICAgIGZ1bmN0aW9uIGFkZENvbW1lbnQoZSkge1xuICAgICAgICBlLnByZXZlbnREZWZhdWx0KCk7XG5cbiAgICAgICAgaWYgKCFrYXNwZXJza3kuaXNBdXRob3JpemVkKSB7XG4gICAgICAgICAgICB3aW5kb3cubG9jYXRpb24gPSBrYXNwZXJza3kubG9naW5VcmwgKyAnP25leHQ9JyArIGxvY2F0aW9uLnBhdGhuYW1lO1xuICAgICAgICAgICAgcmV0dXJuO1xuICAgICAgICB9XG5cbiAgICAgICAgdmFyICR0ZXh0QXJlYSA9ICQoJy5qcy1jb21tZW50LWFkZCB0ZXh0YXJlYScpO1xuICAgICAgICB2YXIgdGV4dCA9ICR0ZXh0QXJlYS52YWwoKTtcblxuICAgICAgICBpZiAodGV4dC50cmltKCkgPT09ICcnKSB7XG4gICAgICAgICAgICByZXR1cm47XG4gICAgICAgIH1cblxuICAgICAgICAkdGV4dEFyZWEudmFsKCcnKS5ibHVyKCk7XG4gICAgICAgIGNoZWNrQ29tbWVudHNPd25lcigpO1xuXG4gICAgICAgICQucG9zdChcbiAgICAgICAgICAgIGxhbmdVcmwgKyAnYXBpL3ByZWRpY3Rpb25zLycgKyBrYXNwZXJza3kuYnJpZWZJZCArICcvY29tbWVudCcsIHtcbiAgICAgICAgICAgICAgICB0ZXh0OiB0ZXh0XG4gICAgICAgICAgICB9XG4gICAgICAgIClcbiAgICAgICAgICAgIC5kb25lKChyZXN1bHQpID0+IHtcbiAgICAgICAgICAgICAgICBpZiAocmVzdWx0LnN0YXR1cyA9PT0gJ29rJykge1xuICAgICAgICAgICAgICAgICAgICB2YXIgY29tbWVudFRlbXBsYXRlID0gJzxkaXYgY2xhc3M9XCJjb21tZW50X193cmFwIGpzLWNvbW1lbnRzLWl0ZW0gY29tbWVudC1vd25lclwiIGlkPVwiJyArIHJlc3VsdC5pZCArICdcIj4gPGRpdiBjbGFzcz1cImNvbW1lbnRfX2F1dGhvclwiIHN0eWxlPVwiYmFja2dyb3VuZC1pbWFnZTogdXJsKC8nICsga2FzcGVyc2t5LnVzZXJBdmF0YXIgKyAnKVwiPjwvZGl2PjxkaXYgY2xhc3M9XCJjb21tZW50X193cmFwcGVyIGpzLWNvbW1lbnQtcm9vdFwiPiA8c3BhbiBjbGFzcz1cImNvbW1lbnRfX25hbWUganMtY29tbWVudC1uYW1lXCI+JyArIGthc3BlcnNreS51c2VyTmFtZSArICc8L3NwYW4+IDxzcGFuIGNsYXNzPVwiY29tbWVudF9fdGV4dCBqcy1jb21tZW50LXRleHRcIj4nICsgcmVzdWx0LnRleHQgKyAnPC9zcGFuPiA8ZGl2IGNsYXNzPVwiY29tbWVudF9fdG9vbHNcIj4gPHNwYW4gY2xhc3M9XCJjb21tZW50X19kYXRlXCI+JyArIG1vbWVudCgpLmZvcm1hdChcIkREIE1NTSBZWVlZXCIpICsgJzwvc3Bhbj4gPHNwYW4gY2xhc3M9XCJjb21tZW50X19saWtlIGpzLWxpa2UtYnRuXCI+IDxzcGFuIGNsYXNzPVwiY29tbWVudF9fbGlrZS1pY29uIGpzLWxpa2UtaWNvblwiPiA8c3ZnIHdpZHRoPVwiMTRweFwiIGhlaWdodD1cIjEzcHhcIiB2aWV3Qm94PVwiMCAwIDE0IDEzXCIgdmVyc2lvbj1cIjEuMVwiIHhtbG5zPVwiaHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmdcIiB4bWxuczp4bGluaz1cImh0dHA6Ly93d3cudzMub3JnLzE5OTkveGxpbmtcIj48ZyBpZD1cIkRlc2t0b3BcIiBzdHJva2U9XCJub25lXCIgc3Ryb2tlLXdpZHRoPVwiMVwiIGZpbGwtcnVsZT1cImV2ZW5vZGRcIj4gPGcgaWQ9XCJSZXBsaWVzLXYuMS4yXCIgdHJhbnNmb3JtPVwidHJhbnNsYXRlKC0yMTAuMDAwMDAwLCAtMTc4MS4wMDAwMDApXCIgc3Ryb2tlPVwiIzAwRkZBN1wiPiA8ZyBpZD1cIkdyb3VwLThcIiB0cmFuc2Zvcm09XCJ0cmFuc2xhdGUoNjguMDAwMDAwLCAxNzI1LjAwMDAwMClcIj4gPGcgaWQ9XCJHcm91cC01XCIgdHJhbnNmb3JtPVwidHJhbnNsYXRlKDE0Mi4wMDAwMDAsIDU1LjAwMDAwMClcIj4gPGcgaWQ9XCJoZWFydFwiIHRyYW5zZm9ybT1cInRyYW5zbGF0ZSgwLjAwMDAwMCwgMi4wMDAwMDApXCI+IDxwYXRoIGQ9XCJNMTAuMDM1LDAgQzExLjExOCwwIDExLjk2NywwLjI5NiAxMi41OCwwLjg4OSBDMTMuMTkzLDEuNDgyIDEzLjUsMi4yOTkgMTMuNSwzLjM0MyBDMTMuNSw0LjA1MyAxMy4yNDUsNC43ODEgMTIuNzM1LDUuNTIzIEMxMi40OCw1LjkwMyAxMi4xODUsNi4yNTEgMTEuODUxLDYuNTY3IEw3LjM4MiwxMC44NTcgQzcuMjc2NDY4MjYsMTAuOTQ5ODI2OSA3LjE0MDU0NjM1LDExLjAwMDcwODYgNywxMS4wMDAwMTQxIEM2Ljg1OTU4NDE1LDExLjAwMDk4NDkgNi43MjM2Nzc5OCwxMC45NTA0NjQ4IDYuNjE4LDEwLjg1OCBMMi4xNDgsNi41NjcgQzEuODMxNjY5MDQsNi4yNzc0MDAzMSAxLjU1MTAxOTAzLDUuOTUxMDk0MzEgMS4zMTIsNS41OTUgQzAuNzcyLDQuODIgMC41LDQuMDcgMC41LDMuMzQzIEMwLjUsMi4zIDAuODA3LDEuNDgyIDEuNDIsMC44ODkgQzIuMDMzLDAuMjk2IDIuODgyLDAgMy45NjUsMCBDNC41MjMsMCA1LjExMiwwLjE5IDUuNzMzLDAuNTY5IEM2LjE2MywwLjgyMiA2LjU4NiwxLjE0NiA3LDEuNTQxIEM3LjQxNCwxLjE0NiA3LjgzNiwwLjgyMSA4LjI2NywwLjU2OSBDOC44ODcsMC4xODkgOS40NzcsMCAxMC4wMzUsMCBaXCIgaWQ9XCJQYXRoXCI+PC9wYXRoPiA8L2c+IDwvZz4gPC9nPiA8L2c+IDwvZz4gPC9zdmc+IDwvc3Bhbj4gPHNwYW4gY2xhc3M9XCJjb21tZW50X19saWtlLXF0eSBqcy1saWtlLWNvdW50ZXJcIj4wPC9zcGFuPiA8L3NwYW4+IDxzcGFuIGNsYXNzPVwiY29tbWVudF9fcmVwbHkganMtY29tbWVudC1yZXBseVwiPnJlcGx5PC9zcGFuPiA8L2Rpdj48c3BhbiBjbGFzcz1cImNvbW1lbnRfX3JlcGx5LWxpbmsganMtcmVwbGllcy1saW5rXCI+IDxzcGFuPiA8c3BhbiBjbGFzcz1cImNvbW1lbnRfX3JlcGx5LWxpbmstdGV4dCBqcy1yZXBseS1saW5rLXRleHRcIiBkYXRhLXRleHQtc2hvdz1cIlNob3cgcmVwbGllc1wiIGRhdGEtdGV4dC1oaWRlPVwiSGlkZSByZXBsaWVzXCI+U2hvdyByZXBsaWVzPC9zcGFuPiA8c3BhbiBjbGFzcz1cImpzLXJlcGxpZXMtY291bnQgY29tbWVudF9fcmVwbGllcy1jb3VudCBpcy16ZXJvXCI+KDxzcGFuIGNsYXNzPVwiY29tbWVudF9fcmVwbGllcy1jb3VudGVyIGpzLXJlcGxpZXMtY291bnRlclwiPjQ8L3NwYW4+KTwvc3Bhbj4gPC9zcGFuPiA8c3BhbiBjbGFzcz1cImNvbW1lbnRfX3JlcGx5LWxpbmstYXJyb3cganMtcmVwbHktYXJyb3dcIj4gPHN2ZyB4bWxucz1cImh0dHA6Ly93d3cudzMub3JnLzIwMDAvc3ZnXCIgeG1sbnM6eGxpbms9XCJodHRwOi8vd3d3LnczLm9yZy8xOTk5L3hsaW5rXCIgd2lkdGg9XCIxNVwiIGhlaWdodD1cIjE1XCIgdmlld0JveD1cIjAgMCAxNSAxNVwiPiA8ZGVmcz4gPHBhdGggaWQ9XCJhXCIgZD1cIk04LjQxNSAxMS40ODVMNC4zMTQgNy4zODdjLS4xNzItLjE4LS4yMzItLjI1My0uMjMyLS4zNzYtLjAwMS0uMTIzLjA2LS4xOS4yMzUtLjM3Nkw4LjQ4IDIuNDhjLjU2NC0uNTU5IDEuMzkxLjI2OC44MzIuODMxbC0zLjcxNCAzLjcgMy42NDggMy42NDJhLjU5LjU5IDAgMCAxLS44My44MzJ6XCIvPiA8L2RlZnM+IDxnIGZpbGw9XCJub25lXCIgZmlsbC1ydWxlPVwiZXZlbm9kZFwiIHRyYW5zZm9ybT1cIm1hdHJpeCgwIDEgMSAwIDEgMSlcIj4gPHJlY3Qgd2lkdGg9XCIxNFwiIGhlaWdodD1cIjE0XCIgZmlsbD1cIiMwMzAzMDNcIiBmaWxsLW9wYWNpdHk9XCIuMDFcIiBzdHJva2U9XCIjNTBFM0MyXCIgc3Ryb2tlLXdpZHRoPVwiLjAxXCIgb3BhY2l0eT1cIi4wMVwiIHJ4PVwiM1wiLz4gPHVzZSBmaWxsPVwiIzAwRkZBN1wiIHhsaW5rOmhyZWY9XCIjYVwiLz4gPC9nPiA8L3N2Zz4gPC9zcGFuPiA8L3NwYW4+IDxkaXYgY2xhc3M9XCJjb21tZW50X19yZXBsaWVzIGpzLXJlcGxpZXMtd3JhcHBlclwiPiA8ZGl2IGNsYXNzPVwiY29tbWVudF9fcmVwbGllcy1jb250YWluZXIganMtcmVwbGllcy1jb250YWluZXJcIj4gPC9kaXY+PGRpdiBjbGFzcz1cImNvbW1lbnRfX3JlcGxpZXMtZm9ybSBcIj4gPGRpdiBjbGFzcz1cInByZWRpY3Rpb25fX2NvbW1lbnQgY29tbWVudCBqcy1yZXBseS1mb3JtLWNvbnRhaW5lclwiPiA8L2Rpdj48L2Rpdj48L2Rpdj48ZGl2IGNsYXNzPVwiY29tbWVudF9fZGVsZXRlIGpzLXBvcHVwLWNvbW1lbnRcIj4gPHN2ZyB3aWR0aD1cIjE0cHhcIiBoZWlnaHQ9XCIxNHB4XCIgdmlld0JveD1cIjAgMCAxNCAxNFwiIHZlcnNpb249XCIxLjFcIiB4bWxucz1cImh0dHA6Ly93d3cudzMub3JnLzIwMDAvc3ZnXCIgeG1sbnM6eGxpbms9XCJodHRwOi8vd3d3LnczLm9yZy8xOTk5L3hsaW5rXCI+IDxnIGlkPVwiRGVza3RvcFwiIHN0cm9rZT1cIm5vbmVcIiBzdHJva2Utd2lkdGg9XCIxXCIgZmlsbC1ydWxlPVwiZXZlbm9kZFwiPiA8ZyBpZD1cIlJlcGxpZXMtdi4xLjJcIiB0cmFuc2Zvcm09XCJ0cmFuc2xhdGUoLTkyNC4wMDAwMDAsIC0xNjU3LjAwMDAwMClcIiBmaWxsLXJ1bGU9XCJub256ZXJvXCI+IDxnIGlkPVwiY3Jvc3NcIiB0cmFuc2Zvcm09XCJ0cmFuc2xhdGUoOTI0LjAwMDAwMCwgMTY1Ny4wMDAwMDApXCI+IDxwb2x5Z29uIGlkPVwiUGF0aFwiIHBvaW50cz1cIjguODgwNjY2NjcgNi45MDEwNjY2NyAxMy44MDIxMzMzIDExLjgyMjUzMzMgMTEuODIyNTMzMyAxMy44MDIxMzMzIDYuOTAxMDY2NjcgOC44ODA2NjY2NyAxLjk3OTYgMTMuODAyMTMzMyAwIDExLjgyMjUzMzMgNC45MjE0NjY2NyA2LjkwMTA2NjY3IDAgMS45Nzk2IDEuOTc5NiAwIDYuOTAxMDY2NjcgNC45MjE0NjY2NyAxMS44MjI1MzMzIDAgMTMuODAyMTMzMyAxLjk3OTZcIj48L3BvbHlnb24+IDwvZz4gPC9nPiA8L2c+IDwvc3ZnPiA8L2Rpdj48L2Rpdj48L2Rpdj4nO1xuICAgICAgICAgICAgICAgICAgICB2YXIgJGNvbW1lbnQgPSAkKGNvbW1lbnRUZW1wbGF0ZSkuY2xvbmUoKTtcblxuICAgICAgICAgICAgICAgICAgICAkKCcuanMtY29tbWVudC1saXN0JykucHJlcGVuZCgkY29tbWVudCk7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfSlcbiAgICAgICAgICAgIC5mYWlsKGZ1bmN0aW9uIChtc2cpIHtcbiAgICAgICAgICAgIGFsZXJ0KG1zZy5zdGF0dXNUZXh0KTtcbiAgICAgICAgfSk7XG4gICAgfVxuXG4gICAgY2hlY2tDb21tZW50c093bmVyKCk7XG4gICAgY2hlY2tSZXBsaWVzTnVtYmVyKCk7XG5cbiAgICAvKiBPcGVuL2hpZGUgcmVwbGllcyAqL1xuXG4gICAgJChkb2N1bWVudCkub24oJ2NsaWNrJywgJy5qcy1yZXBsaWVzLWxpbmsnLCBmdW5jdGlvbiAoKSB7XG4gICAgICAgIHZhciAkcmVwbGllc0xpbmtUaXRsZSA9ICQodGhpcykuZmluZCgnLmpzLXJlcGx5LWxpbmstdGV4dCcpO1xuICAgICAgICB2YXIgcmVwbGllc0xpbmtUaXRsZTtcblxuICAgICAgICBpZiAoJCh0aGlzKS5oYXNDbGFzcygnaXMtb3BlbicpKSB7XG4gICAgICAgICAgICByZXBsaWVzTGlua1RpdGxlID0gJHJlcGxpZXNMaW5rVGl0bGUuYXR0cignZGF0YS10ZXh0LXNob3cnKTtcbiAgICAgICAgICAgICQodGhpcykucmVtb3ZlQ2xhc3MoJ2lzLW9wZW4nKTtcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgIHJlcGxpZXNMaW5rVGl0bGUgPSAkcmVwbGllc0xpbmtUaXRsZS5hdHRyKCdkYXRhLXRleHQtaGlkZScpO1xuICAgICAgICAgICAgJCh0aGlzKS5hZGRDbGFzcygnaXMtb3BlbicpO1xuICAgICAgICB9XG5cbiAgICAgICAgJHJlcGxpZXNMaW5rVGl0bGUudGV4dChyZXBsaWVzTGlua1RpdGxlKTtcbiAgICB9KTtcblxuICAgIC8qIEFkZCByZXBseSAqL1xuXG4gICAgLy8gQXBwZW5kIHJlcGx5IGZvcm1cblxuICAgICQoZG9jdW1lbnQpLm9uKCdjbGljaycsICcuanMtY29tbWVudC1yZXBseScsIGZ1bmN0aW9uICgpIHtcbiAgICAgICAgdmFyICRyZXBsaWVzTGlua1RpdGxlID0gJCh0aGlzKS5wYXJlbnQoKS5zaWJsaW5ncygnLmpzLXJlcGxpZXMtbGluaycpLmZpbmQoJy5qcy1yZXBseS1saW5rLXRleHQnKTtcbiAgICAgICAgdmFyIHJlcGxpZXNMaW5rVGl0bGUgPSAkcmVwbGllc0xpbmtUaXRsZS5hdHRyKCdkYXRhLXRleHQtaGlkZScpO1xuICAgICAgICAkcmVwbGllc0xpbmtUaXRsZS50ZXh0KHJlcGxpZXNMaW5rVGl0bGUpO1xuICAgICAgICB2YXIgY29tbWVudEF1dGhvck5hbWUgPSAkKHRoaXMpLnBhcmVudCgpLnNpYmxpbmdzKCcuanMtY29tbWVudC1uYW1lJykudGV4dCgpO1xuICAgICAgICB2YXIgJHJlcGx5Rm9ybSA9ICQoJy5qcy1yZXBseS1mb3JtLXRlbXBsYXRlJykuY2xvbmUoKS5yZW1vdmVDbGFzcygnanMtcmVwbHktZm9ybS10ZW1wbGF0ZScpO1xuICAgICAgICB2YXIgcmVwbHlJZCA9ICQodGhpcykuY2xvc2VzdCgnLmpzLWNvbW1lbnRzLWl0ZW0nKS5hdHRyKCdpZCcpO1xuICAgICAgICAkcmVwbHlGb3JtLmZpbmQoJy5qcy1yZXBseS1hZGQnKS5hdHRyKCdkYXRhLXJlcGx5LWlkJywgcmVwbHlJZCk7XG4gICAgICAgIHZhciAkY29udGFpbmVyID0gJCh0aGlzKS5jbG9zZXN0KCcuanMtY29tbWVudC1yb290JykuZmluZCgnLmpzLXJlcGx5LWZvcm0tY29udGFpbmVyJyk7XG4gICAgICAgIGlmICghJGNvbnRhaW5lci5jaGlsZHJlbigpLmxlbmd0aCkgJGNvbnRhaW5lci5hcHBlbmQoJHJlcGx5Rm9ybSk7XG5cbiAgICAgICAgJCh0aGlzKS5wYXJlbnQoKS5zaWJsaW5ncygnLmpzLXJlcGxpZXMtbGluaycpLmFkZENsYXNzKCdpcy1vcGVuJyk7XG4gICAgICAgIHZhciAkcmVwbHlJbnB1dEZpZWxkID0gJCgkY29udGFpbmVyKS5maW5kKCd0ZXh0YXJlYScpO1xuICAgICAgICAkcmVwbHlJbnB1dEZpZWxkLnZhbChjb21tZW50QXV0aG9yTmFtZSArICcsICcpLmZvY3VzKCk7XG4gICAgfSk7XG5cbiAgICAvLyBTdWJtaXQgcmVwbHlcblxuICAgICQoZG9jdW1lbnQpLm9uKCdzdWJtaXQnLCAnLmpzLXJlcGx5LWFkZCcsIGZ1bmN0aW9uIChlKSB7XG4gICAgICAgIGUucHJldmVudERlZmF1bHQoKTtcbiAgICAgICAgJCh0aGlzKS5maW5kKCcuY29tbWVudF9fc2VuZCcpLmF0dHIoJ2Rpc2FibGVkJywgdHJ1ZSk7XG4gICAgICAgIHZhciBzZWxmID0gdGhpcztcbiAgICAgICAgdmFyIHRleHQgPSAkKHRoaXMpLmNoaWxkcmVuKCd0ZXh0YXJlYScpLnZhbCgpO1xuICAgICAgICB2YXIgcGFyZW50SUQgPSAkKHRoaXMpLmNsb3Nlc3QoJy5qcy1jb21tZW50cy1pdGVtJykuYXR0cignaWQnKTtcbiAgICAgICAgdmFyIHJlcGx5SUQgPSAkKHRoaXMpLmF0dHIoJ2RhdGEtcmVwbHktaWQnKTtcbiAgICAgICAgdmFyIGRhdGEgPSB7XG4gICAgICAgICAgICB0ZXh0OiB0ZXh0LFxuICAgICAgICAgICAgcGFyZW50SUQ6IHBhcmVudElELFxuICAgICAgICAgICAgcmVwbHlJRDogcmVwbHlJRCxcbiAgICAgICAgfTtcbiAgICAgICAgJC5hamF4KHtcbiAgICAgICAgICAgIHVybDogbGFuZ1VybCArICdhcGkvcHJlZGljdGlvbnMvJyArIGthc3BlcnNreS5icmllZklkICsgJy9jb21tZW50JyxcbiAgICAgICAgICAgIG1ldGhvZDogJ1BPU1QnLFxuICAgICAgICAgICAgZGF0YTogZGF0YSxcbiAgICAgICAgICAgIHR5cGU6ICdqc29uJyxcbiAgICAgICAgICAgIHN1Y2Nlc3M6IGZ1bmN0aW9uIChyZXNwb25zZSkge1xuICAgICAgICAgICAgICAgIHZhciByZXBseVRlbXBsYXRlID0gJzxkaXYgY2xhc3M9XCJjb21tZW50X193cmFwIGpzLWNvbW1lbnRzLWl0ZW1cIiBwYXJlbnQtaWQ9XCInICsgcGFyZW50SUQgKyAnXCIgaWQ9XCInICsgcmVzcG9uc2UuaWQgKyAnXCI+IDxkaXYgY2xhc3M9XCJjb21tZW50X19hdXRob3JcIiBzdHlsZT1cImJhY2tncm91bmQtaW1hZ2U6IHVybCgvJyArIGthc3BlcnNreS51c2VyQXZhdGFyICsgJylcIj48L2Rpdj48ZGl2IGNsYXNzPVwiY29tbWVudF9fd3JhcHBlclwiPiA8c3BhbiBjbGFzcz1cImNvbW1lbnRfX25hbWUganMtY29tbWVudC1uYW1lXCI+JyArIGthc3BlcnNreS51c2VyTmFtZSArICc8L3NwYW4+IDxzcGFuIGNsYXNzPVwiY29tbWVudF9fdGV4dCBqcy1jb21tZW50LXRleHRcIj4nICsgcmVzcG9uc2UudGV4dCArICc8L3NwYW4+IDxkaXYgY2xhc3M9XCJjb21tZW50X190b29sc1wiPiA8c3BhbiBjbGFzcz1cImNvbW1lbnRfX2RhdGVcIj4nICsgbW9tZW50KCkuZm9ybWF0KFwiREQgTU1NIFlZWVlcIikgKyAnPC9zcGFuPiA8c3BhbiBjbGFzcz1cImNvbW1lbnRfX2xpa2UganMtbGlrZS1idG5cIj4gPHNwYW4gY2xhc3M9XCJjb21tZW50X19saWtlLWljb24ganMtbGlrZS1pY29uXCI+IDxzdmcgd2lkdGg9XCIxNHB4XCIgaGVpZ2h0PVwiMTNweFwiIHZpZXdCb3g9XCIwIDAgMTQgMTNcIiB2ZXJzaW9uPVwiMS4xXCIgeG1sbnM9XCJodHRwOi8vd3d3LnczLm9yZy8yMDAwL3N2Z1wiIHhtbG5zOnhsaW5rPVwiaHR0cDovL3d3dy53My5vcmcvMTk5OS94bGlua1wiPjxnIGlkPVwiRGVza3RvcFwiIHN0cm9rZT1cIm5vbmVcIiBzdHJva2Utd2lkdGg9XCIxXCIgZmlsbC1ydWxlPVwiZXZlbm9kZFwiPiA8ZyBpZD1cIlJlcGxpZXMtdi4xLjJcIiB0cmFuc2Zvcm09XCJ0cmFuc2xhdGUoLTIxMC4wMDAwMDAsIC0xNzgxLjAwMDAwMClcIiBzdHJva2U9XCIjMDBGRkE3XCI+IDxnIGlkPVwiR3JvdXAtOFwiIHRyYW5zZm9ybT1cInRyYW5zbGF0ZSg2OC4wMDAwMDAsIDE3MjUuMDAwMDAwKVwiPiA8ZyBpZD1cIkdyb3VwLTVcIiB0cmFuc2Zvcm09XCJ0cmFuc2xhdGUoMTQyLjAwMDAwMCwgNTUuMDAwMDAwKVwiPiA8ZyBpZD1cImhlYXJ0XCIgdHJhbnNmb3JtPVwidHJhbnNsYXRlKDAuMDAwMDAwLCAyLjAwMDAwMClcIj4gPHBhdGggZD1cIk0xMC4wMzUsMCBDMTEuMTE4LDAgMTEuOTY3LDAuMjk2IDEyLjU4LDAuODg5IEMxMy4xOTMsMS40ODIgMTMuNSwyLjI5OSAxMy41LDMuMzQzIEMxMy41LDQuMDUzIDEzLjI0NSw0Ljc4MSAxMi43MzUsNS41MjMgQzEyLjQ4LDUuOTAzIDEyLjE4NSw2LjI1MSAxMS44NTEsNi41NjcgTDcuMzgyLDEwLjg1NyBDNy4yNzY0NjgyNiwxMC45NDk4MjY5IDcuMTQwNTQ2MzUsMTEuMDAwNzA4NiA3LDExLjAwMDAxNDEgQzYuODU5NTg0MTUsMTEuMDAwOTg0OSA2LjcyMzY3Nzk4LDEwLjk1MDQ2NDggNi42MTgsMTAuODU4IEwyLjE0OCw2LjU2NyBDMS44MzE2NjkwNCw2LjI3NzQwMDMxIDEuNTUxMDE5MDMsNS45NTEwOTQzMSAxLjMxMiw1LjU5NSBDMC43NzIsNC44MiAwLjUsNC4wNyAwLjUsMy4zNDMgQzAuNSwyLjMgMC44MDcsMS40ODIgMS40MiwwLjg4OSBDMi4wMzMsMC4yOTYgMi44ODIsMCAzLjk2NSwwIEM0LjUyMywwIDUuMTEyLDAuMTkgNS43MzMsMC41NjkgQzYuMTYzLDAuODIyIDYuNTg2LDEuMTQ2IDcsMS41NDEgQzcuNDE0LDEuMTQ2IDcuODM2LDAuODIxIDguMjY3LDAuNTY5IEM4Ljg4NywwLjE4OSA5LjQ3NywwIDEwLjAzNSwwIFpcIiBpZD1cIlBhdGhcIj48L3BhdGg+IDwvZz4gPC9nPiA8L2c+IDwvZz4gPC9nPiA8L3N2Zz4gPC9zcGFuPiA8c3BhbiBjbGFzcz1cImNvbW1lbnRfX2xpa2UtcXR5IGpzLWxpa2UtY291bnRlclwiPjwvc3Bhbj4gPC9zcGFuPiA8c3BhbiBjbGFzcz1cImNvbW1lbnRfX3JlcGx5IGpzLWNvbW1lbnQtcmVwbHlcIj5yZXBseTwvc3Bhbj4gPC9kaXY+PGRpdiBjbGFzcz1cImNvbW1lbnRfX2RlbGV0ZSBqcy1wb3B1cC1jb21tZW50XCI+IDxzdmcgd2lkdGg9XCIxNHB4XCIgaGVpZ2h0PVwiMTRweFwiIHZpZXdCb3g9XCIwIDAgMTQgMTRcIiB2ZXJzaW9uPVwiMS4xXCIgeG1sbnM9XCJodHRwOi8vd3d3LnczLm9yZy8yMDAwL3N2Z1wiIHhtbG5zOnhsaW5rPVwiaHR0cDovL3d3dy53My5vcmcvMTk5OS94bGlua1wiPiA8ZyBpZD1cIkRlc2t0b3BcIiBzdHJva2U9XCJub25lXCIgc3Ryb2tlLXdpZHRoPVwiMVwiIGZpbGwtcnVsZT1cImV2ZW5vZGRcIj4gPGcgaWQ9XCJSZXBsaWVzLXYuMS4yXCIgdHJhbnNmb3JtPVwidHJhbnNsYXRlKC05MjQuMDAwMDAwLCAtMTY1Ny4wMDAwMDApXCIgZmlsbC1ydWxlPVwibm9uemVyb1wiPiA8ZyBpZD1cImNyb3NzXCIgdHJhbnNmb3JtPVwidHJhbnNsYXRlKDkyNC4wMDAwMDAsIDE2NTcuMDAwMDAwKVwiPiA8cG9seWdvbiBpZD1cIlBhdGhcIiBwb2ludHM9XCI4Ljg4MDY2NjY3IDYuOTAxMDY2NjcgMTMuODAyMTMzMyAxMS44MjI1MzMzIDExLjgyMjUzMzMgMTMuODAyMTMzMyA2LjkwMTA2NjY3IDguODgwNjY2NjcgMS45Nzk2IDEzLjgwMjEzMzMgMCAxMS44MjI1MzMzIDQuOTIxNDY2NjcgNi45MDEwNjY2NyAwIDEuOTc5NiAxLjk3OTYgMCA2LjkwMTA2NjY3IDQuOTIxNDY2NjcgMTEuODIyNTMzMyAwIDEzLjgwMjEzMzMgMS45Nzk2XCI+PC9wb2x5Z29uPiA8L2c+IDwvZz4gPC9nPiA8L3N2Zz4gPC9kaXY+PC9kaXY+PC9kaXY+JztcbiAgICAgICAgICAgICAgICB2YXIgJHJlcGx5ID0gJChyZXBseVRlbXBsYXRlKS5jbG9uZSgpO1xuICAgICAgICAgICAgICAgIHZhciAkY29udGFpbmVyID0gJChzZWxmKS5jbG9zZXN0KCcuanMtY29tbWVudC1yb290JykuZmluZCgnLmpzLXJlcGxpZXMtY29udGFpbmVyJyk7XG4gICAgICAgICAgICAgICAgJGNvbnRhaW5lci5hcHBlbmQoJHJlcGx5KTtcbiAgICAgICAgICAgICAgICAkKHNlbGYpLmNsb3Nlc3QoJy5jb21tZW50X193cmFwJykucmVtb3ZlKCk7XG4gICAgICAgICAgICAgICAgY2hlY2tDb21tZW50c093bmVyKCk7XG4gICAgICAgICAgICAgICAgY2hlY2tSZXBsaWVzTnVtYmVyKCk7XG4gICAgICAgICAgICB9LFxuICAgICAgICAgICAgZXJyb3I6IGZ1bmN0aW9uKCkge1xuICAgICAgICAgICAgICBjb25zb2xlLmxvZygnQWpheCBmYWlsZWQnKVxuICAgICAgICAgICAgfVxuXG4gICAgICAgIH0pXG4gICAgfSk7XG5cbiAgICAkKGRvY3VtZW50KS5vbignY2xpY2snLCAnLmpzLXJlcGx5LWNsb3NlJywgZnVuY3Rpb24gKGUpIHtcbiAgICAgICAgZS5wcmV2ZW50RGVmYXVsdCgpO1xuICAgICAgICAkKHRoaXMpLmNsb3Nlc3QoJy5jb21tZW50X193cmFwJykucmVtb3ZlKCk7XG4gICAgfSk7XG5cbiAgICAvLyBwb3B1cFxuXG4gICAgZnVuY3Rpb24gc2hvd1BvcHVwKCkge1xuICAgICAgICAkKCcucG9wdXAnKS5hZGRDbGFzcygnaXMtdmlzaWJsZScpO1xuICAgIH1cblxuICAgIGZ1bmN0aW9uIGNsb3NlUG9wdXAoKSB7XG4gICAgICAgICQoJy5wb3B1cCcpLnJlbW92ZUNsYXNzKCdpcy12aXNpYmxlJyk7XG4gICAgfVxuXG4gICAgJChkb2N1bWVudCkub24oJ2NsaWNrJywgJy5qcy1wb3B1cCcsIGZ1bmN0aW9uKCkge1xuICAgICAgICBjb25zdCBwb3B1cCA9ICQoJy5wb3B1cCcpO1xuXG4gICAgICAgIHBvcHVwLmFkZENsYXNzKCdpcy12aXNpYmxlJyk7XG4gICAgICAgICQocG9wdXApLm9uKCdjbGljaycsICdbZGF0YS1wb3B1cC1jbG9zZV0nLCBjbG9zZVBvcHVwKTtcbiAgICB9KTtcblxuICAgIC8vIGRlbGV0ZSBjb21tZW50XG5cbiAgICBmdW5jdGlvbiByZW1vdmVDb21tZW50KGN1cnJlbnRJdGVtKSB7XG4gICAgICAgIHZhciBpZCA9ICQoY3VycmVudEl0ZW0pLmF0dHIoJ2lkJyk7XG5cbiAgICAgICAgJC5hamF4KHtcbiAgICAgICAgICAgIHVybDogbGFuZ1VybCArICdhcGkvcHJlZGljdGlvbnMvY29tbWVudC8nICsgaWQsXG4gICAgICAgICAgICBtZXRob2Q6ICdERUxFVEUnLFxuICAgICAgICAgICAgc3VjY2VzczogZnVuY3Rpb24gKHJlc3BvbnNlKSB7XG4gICAgICAgICAgICAgICAgaWYgKHJlc3BvbnNlLnN0YXR1cyA9PSBcIm9rXCIpe1xuICAgICAgICAgICAgICAgICAgICAkKGN1cnJlbnRJdGVtKS5maW5kKCcuanMtY29tbWVudC10ZXh0OmZpcnN0JykudGV4dChyZXNwb25zZS50ZXh0KTtcbiAgICAgICAgICAgICAgICAgICAgJChjdXJyZW50SXRlbSkuZmluZCgnLmNvbW1lbnRfX2RlbGV0ZTpsYXN0JykuY3NzKCdkaXNwbGF5JywgJ25vbmUnKTtcbiAgICAgICAgICAgICAgICB9IGVsc2UgaWYocmVzcG9uc2Uuc3RhdHVzID09IFwicmVtb3ZlXCIpIHtcbiAgICAgICAgICAgICAgICAgICAgaWYgKGN1cnJlbnRJdGVtLmhhc0NsYXNzKFwiY29tbWVudC1vd25lclwiKSAmJiBjdXJyZW50SXRlbS5zaWJsaW5ncyhcIi5qcy1jb21tZW50cy1pdGVtXCIpLmxlbmd0aCA9PSAwKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICBjdXJyZW50SXRlbS5wYXJlbnRzKFwiLmpzLXJlcGxpZXMtd3JhcHBlclwiKS5zaWJsaW5ncyhcIi5qcy1yZXBsaWVzLWxpbmtcIikucmVtb3ZlKCk7XG4gICAgICAgICAgICAgICAgICAgIH0gZWxzZXtcbiAgICAgICAgICAgICAgICAgICAgICAgIGN1cnJlbnRJdGVtLnJlbW92ZSgpO1xuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICAgICAgY2xvc2VQb3B1cCgpO1xuICAgICAgICAgICAgfVxuICAgICAgICB9KVxuXG5cbiAgICB9XG5cbiAgICAkKGRvY3VtZW50KS5vbignY2xpY2snLCAnLmpzLXBvcHVwLWNvbW1lbnQnLCBmdW5jdGlvbigpIHtcbiAgICAgICAgc2hvd1BvcHVwKCk7XG5cbiAgICAgICAgdmFyIGN1cnJlbnRJdGVtID0gJCh0aGlzKS5jbG9zZXN0KCcuanMtY29tbWVudHMtaXRlbScpO1xuXG4gICAgICAgICQoZG9jdW1lbnQpLm9uKCdjbGljaycsICcuanMtZGVsZXRlLWNvbW1lbnQnLCBmdW5jdGlvbigpIHtcbiAgICAgICAgICAgIHJlbW92ZUNvbW1lbnQoY3VycmVudEl0ZW0pO1xuICAgICAgICB9KTtcbiAgICAgICAgJChkb2N1bWVudCkub24oJ2NsaWNrJywgJ1tkYXRhLXBvcHVwLWNsb3NlXScsIGNsb3NlUG9wdXApO1xuICAgIH0pO1xuXG4gICAgLy8gQWRkIGxpa2VcblxuICAgICQoZG9jdW1lbnQpLm9uKCdjbGljaycsICcuanMtbGlrZS1idG4nLCBmdW5jdGlvbiAoKSB7XG4gICAgICAgIGlmICgha2FzcGVyc2t5LmlzQXV0aG9yaXplZCkge1xuICAgICAgICAgIHdpbmRvdy5sb2NhdGlvbiA9IGthc3BlcnNreS5sb2dpblVybCArICc/bmV4dD0nICsgbG9jYXRpb24ucGF0aG5hbWU7XG4gICAgICAgICAgcmV0dXJuO1xuICAgICAgICB9XG5cbiAgICAgICAgdmFyIGxpa2VDb3VudCA9ICQodGhpcykuY2hpbGRyZW4oJy5qcy1saWtlLWNvdW50ZXInKS50ZXh0KCk7XG4gICAgICAgIGxpa2VDb3VudCA9IC0oLWxpa2VDb3VudCk7XG4gICAgICAgIHZhciBhY3Rpb24gPSAnJztcblxuICAgICAgICBpZiAoISQodGhpcykuaGFzQ2xhc3MoJ2lzLWFjdGl2ZScpKSB7XG4gICAgICAgICAgICAkKHRoaXMpLmFkZENsYXNzKCdpcy1hY3RpdmUnKTtcbiAgICAgICAgICAgIGxpa2VDb3VudCArPSAxO1xuICAgICAgICAgICAgYWN0aW9uID0gXCJhZGRcIjtcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgICQodGhpcykucmVtb3ZlQ2xhc3MoJ2lzLWFjdGl2ZScpO1xuICAgICAgICAgICAgbGlrZUNvdW50IC09IDE7XG4gICAgICAgICAgICBpZiAobGlrZUNvdW50IDw9IDApIGxpa2VDb3VudCA9ICcnO1xuICAgICAgICAgICAgYWN0aW9uID0gXCJyZW1vdmVcIlxuICAgICAgICB9XG5cbiAgICAgICAgJCh0aGlzKS5jaGlsZHJlbignLmpzLWxpa2UtY291bnRlcicpLnRleHQobGlrZUNvdW50KTtcbiAgICAgICAgdmFyIGlkID0gJCh0aGlzKS5jbG9zZXN0KCcuanMtY29tbWVudHMtaXRlbScpLmF0dHIoJ2lkJyk7XG5cbiAgICAgICAgJC5hamF4KHtcbiAgICAgICAgICAgIHVybDogbGFuZ1VybCArICdhcGkvcHJlZGljdGlvbnMvY29tbWVudC8nICsgaWQgKyAnL2xpa2UvJyArIGFjdGlvbixcbiAgICAgICAgICAgIG1ldGhvZDogJ1BPU1QnLFxuICAgICAgICAgICAgc3VjY2VzczogZnVuY3Rpb24gKHJlc3BvbnNlKSB7fVxuICAgICAgICB9KVxuICAgIH0pO1xuXG4gICAgLyogRnVuY3Rpb25zICovXG5cbiAgICAvLyBDaGVjayBjb21tZW50IG93bmVyIGluIG9yZGVyIHRvIG1ha2UgYXZhaWxhYmxlIGRlbGV0ZSBidXR0b25cblxuICAgIGZ1bmN0aW9uIGNoZWNrQ29tbWVudHNPd25lcigpIHtcbiAgICAgICAgdmFyICRjb21tZW50ID0gJGVsZW1lbnQuZmluZCgnLmpzLWNvbW1lbnRzLWl0ZW0nKTtcblxuICAgICAgICAkY29tbWVudC5lYWNoKGZ1bmN0aW9uICgpIHtcbiAgICAgICAgICAgICQodGhpcykuZmluZCgnLmpzLWNvbW1lbnQtbmFtZScpLnRleHQoKSA9PT0ga2FzcGVyc2t5LnVzZXJOYW1lID8gJCh0aGlzKS5hZGRDbGFzcygnY29tbWVudC1vd25lcicpIDogZmFsc2U7XG4gICAgICAgIH0pO1xuICAgIH1cblxuICAgIC8vIENoZWNrIHJlcGxpZXMgbnVtYmVyXG5cbiAgICBmdW5jdGlvbiBjaGVja1JlcGxpZXNOdW1iZXIoKSB7XG4gICAgICAgIHZhciAkb3BlblJlcGxpZXMgPSAkZWxlbWVudC5maW5kKCcuanMtcmVwbGllcy1saW5rJyk7XG5cbiAgICAgICAgJG9wZW5SZXBsaWVzLmVhY2goZnVuY3Rpb24gKCkge1xuICAgICAgICAgICAgJCh0aGlzKS5maW5kKCcuanMtcmVwbHktbGluay10ZXh0Jyk7XG4gICAgICAgICAgICB2YXIgcmVwbGllc0NvdW50ID0gJCh0aGlzKVxuICAgICAgICAgICAgICAgIC5zaWJsaW5ncygnLmpzLXJlcGxpZXMtd3JhcHBlcicpXG4gICAgICAgICAgICAgICAgLmNoaWxkcmVuKCcuanMtcmVwbGllcy1jb250YWluZXInKVxuICAgICAgICAgICAgICAgIC5jaGlsZHJlbignLmpzLWNvbW1lbnRzLWl0ZW0nKVxuICAgICAgICAgICAgICAgIC5sZW5ndGg7XG5cbiAgICAgICAgICAgIHJlcGxpZXNDb3VudCA+IDAgPyAkKHRoaXMpLmFkZENsYXNzKCdpcy1hY3RpdmUnKSA6ICQodGhpcykucmVtb3ZlQ2xhc3MoJ2lzLWFjdGl2ZScpO1xuICAgICAgICAgICAgJCh0aGlzKS5maW5kKCcuanMtcmVwbGllcy1jb3VudGVyJykudGV4dChyZXBsaWVzQ291bnQpO1xuICAgICAgICB9KVxuICAgIH1cblxuICAgICQoZG9jdW1lbnQpLm9uKCdrZXlkb3duJywgJ3RleHRhcmVhJywgZnVuY3Rpb24oZSkge1xuICAgICAgaWYgKGUua2V5Q29kZSA9PT0gMTMpIHtcbiAgICAgICAgZS5wcmV2ZW50RGVmYXVsdCgpO1xuICAgICAgfVxuICAgIH0pO1xuXG4gICAgJChkb2N1bWVudCkub24oJ2tleWRvd24nLCAnLmpzLXJlcGx5LWFkZCB0ZXh0YXJlYScsIGZ1bmN0aW9uKGUpIHtcbiAgICAgIGlmIChlLmtleUNvZGUgPT09IDEzKSB7XG4gICAgICAgICQodGhpcykucGFyZW50KCkudHJpZ2dlcignc3VibWl0Jyk7XG4gICAgICB9XG4gICAgfSk7XG59KSgpO1xuXG5cblxuLy8gV0VCUEFDSyBGT09URVIgLy9cbi8vIC4vcmVzb3VyY2VzL2pzL3ByZWRpY3Rpb24uanMiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./resources/js/prediction.js\n");

/***/ }),

/***/ 2:
/***/ (function(module, exports, __webpack_require__) {

module.exports = __webpack_require__("./resources/js/prediction.js");


/***/ })

/******/ });